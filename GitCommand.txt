**********create a repository***********
git bash at the directory where you want to creat a repository
and just some normal command 
    mkdir "abc" //creat an directory
    cd "abc"    //enter the directory
    pwd //shows the present path 
finally a git command
    git init

**********commit your files to repository***********
creat some files/a file at the repository you just created(please don't use notepad.notepad++ is fine)
like def.txt
    git add def.txt
    git commit -m "added a file"
remember "add" first "commit" later. 
and it's general to add a bunch of files and commit them at one time.

**********check the status and diff of files***********
    git status  
    git diff
    git diff --cached
    git diff HEAD --readme.txt
git diff compares the diff between workspace and stage
--cached sompares the diff between stage and master
fianl one only shows the diff in readme .txt(also between workspace and stage)
    cat readme.txt  /shows the contents of readme.txt
    
**********reset the version***********
    git log
    git log --pretty=oneline
check all the the version committed, second one is shorter
    git reset --hard Head^  /return to the previous version
number of "^" represents how many version you want to roll back
or you can use head~10 instead of ten "^"
    git reflog  /shows all the command you have executed
you could find the version and input like:
    git reset --hard 3628164
the num/num+letter represents ID of version only several num at front is needed but not too less 
for it might match to several versions

**********change***********
just do as the git status says
    rm test.txt     /remove the file in working directory
    git rm test.txt /remove the file in stage
it's important that you know the difference between stage and master
working directory->add->stage->commit->master
master->reset->stage->checkout->working directory

**********Add your SSH key to an Origin***********
    ssh-keygen -t rsa -C "youremail@example.com"
press enter all way down
and the SSH key is kept in C:\Users\t460p\.ssh\
with id_rsa as the private key and id_rsa.pub the public one
fill in your public SSH key in your GitHub account so that it can identify your commit
with the unique SSH key in your PC
and you also could add several different key if you own several smart devices

**********push your master to Origin***********
creat an empty repository at GitHub
    git remote add origin git@github.com:chuqiaochen/LearnGit.git
Origin is the unwritten name of the remote repository
the first time you connect to github you might get a warnning "...can't be established"
this is the SSH connect that need you to confirm that the RSA key fingerprint is from GitHub
once you enter yes the warning won't appear anymore for you have add the key of GitHub to the list of known host
    git push -u origin master
pushs your master to origin and u means you make origin the unritten remote repository
    git push origin master
now every time you have updated your files this command could be used to push your master to GitHub
but remember to commit to the local repository first
